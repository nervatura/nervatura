{"meta":{"report_key":"ntr_custpos_en","report_type":"REPORT","report_name":"Payments Due List","description":"Accounts Payable and Receivable","label":"Invoice","file_type":"FILE_PDF"},"report":{"title":"PAYMENTS DUE LIST","left-margin":15,"top-margin":15,"right-margin":15},"header":[{"row":{"columns":[{"cell":{"name":"custname","value":"company.0.custname","align":"left","font-style":"bold","font-size":12,"width":100}},{"cell":{"name":"label","value":"labels.lb_custpos","font-style":"bolditalic","font-size":24,"align":"right","color":"#696969"}}],"height":10}},{"vgap":{"height":1}},{"hline":{"border-color":100,"gap":1}},{"vgap":{"height":3}},{"row":{"columns":[{"cell":{"name":"label","value":"labels.lb_report_date","font-style":"bold","align":"left"}},{"cell":{"name":"posdate","value":"company.0.posdate","align":"left","font-style":"bold"}},{"cell":{"name":"crdate","value":"={{labels.lb_create_date}} ={{crtime}}","align":"right","font-style":"italic"}}],"hgap":2,"height":1}}],"details":[{"vgap":{"height":2}},{"row":{"columns":[{"cell":{"name":"label","value":"labels.lb_suppliers","align":"center","font-style":"bold","background-color":217}}],"visible":"suppliers"}},{"datagrid":{"columns":[{"column":{"width":"11%","fieldname":"duedate","align":"center","label":"labels.lb_duedate"}},{"column":{"width":"11%","fieldname":"transdate","align":"center","label":"labels.lb_transdate"}},{"column":{"width":"17%","fieldname":"invoice_no","label":"labels.lb_invoice_no"}},{"column":{"width":"20%","fieldname":"customer","label":"labels.lb_customer"}},{"column":{"width":"6%","fieldname":"curr","label":"labels.lb_curr"}},{"column":{"width":"11%","fieldname":"sum_amount","align":"right","label":"labels.lb_sum_amount","header-align":"right"}},{"column":{"width":"11%","fieldname":"paid_amount","align":"right","label":"labels.lb_paid_amount","header-align":"right"}},{"column":{"width":"7%","fieldname":"overdue","align":"right","label":"labels.lb_overdue","header-align":"right"}},{"column":{"fieldname":"days","align":"right","label":"labels.lb_days","header-align":"right"}}],"name":"payable","databind":"suppliers","border":"1","border-color":100,"font-size":8,"header-background":230}},{"vgap":{"height":2}},{"row":{"columns":[{"cell":{"name":"label","value":"labels.lb_customers","align":"center","font-style":"bold","background-color":217}}],"visible":"customers"}},{"datagrid":{"columns":[{"column":{"width":"11%","fieldname":"duedate","align":"center","label":"labels.lb_duedate"}},{"column":{"width":"11%","fieldname":"transdate","align":"center","label":"labels.lb_transdate"}},{"column":{"width":"17%","fieldname":"invoice_no","label":"labels.lb_invoice_no"}},{"column":{"width":"20%","fieldname":"customer","label":"labels.lb_customer"}},{"column":{"width":"6%","fieldname":"curr","label":"labels.lb_curr"}},{"column":{"width":"11%","fieldname":"sum_amount","align":"right","label":"labels.lb_sum_amount","header-align":"right"}},{"column":{"width":"11%","fieldname":"paid_amount","align":"right","label":"labels.lb_paid_amount","header-align":"right"}},{"column":{"width":"7%","fieldname":"overdue","align":"right","label":"labels.lb_overdue","header-align":"right"}},{"column":{"fieldname":"days","align":"right","label":"labels.lb_days","header-align":"right"}}],"name":"receivable","databind":"customers","border":"1","border-color":100,"font-size":8,"header-background":230}}],"footer":[{"vgap":{"height":2}},{"hline":{"border-color":100}},{"row":{"columns":[{"cell":{"value":"labels.web_page","font-style":"bolditalic","color":"#2100FF"}},{"cell":{"value":"{{page}}","align":"right","font-style":"bold"}}],"height":10}}],"sources":{"customers":{"default":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, cast(t.due_time as date)-@posdate as days, case when cast(t.due_time as date)-@posdate<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by cast(t.due_time as date)-@posdate, t.code","mssql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, CONVERT(VARCHAR(10), t.due_time, 120) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), t.code","mysql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), t.code","sqlite":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, julianday(t.due_time)-julianday(@posdate) as days, case when julianday(t.due_time)-julianday(@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and julianday(pm.paid_date)<=julianday(@posdate) group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by julianday(t.due_time)-julianday(@posdate), t.code"},"suppliers":{"default":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, cast(t.due_time as date)-@posdate as days, case when cast(t.due_time as date)-@posdate<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by cast(t.due_time as date)-@posdate, t.code","mssql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, CONVERT(VARCHAR(10), t.due_time, 120) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), t.code","mysql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), t.code","sqlite":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, julianday(t.due_time)-julianday(@posdate) as days, case when julianday(t.due_time)-julianday(@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join(select trans_code, sum(amount) as sum_amount from item_view group by trans_code) as tsum on tsum.trans_code = t.code left join(select l.link_code_2 as trans_code, sum(l.qty*l.rate) as paid_amount from link_view l inner join payment pm on l.link_code_1 = pm.code and pm.deleted = false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and julianday(pm.paid_date)<=julianday(@posdate) group by l.link_code_2) as tpaid on tpaid.trans_code = t.code where t.paid=false and t.trans_type='TRANS_INVOICE' and t.direction='DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by julianday(t.due_time)-julianday(@posdate), t.code"},"company":{"default":"select @posdate as posdate, c.customer_name as custname, c.tax_number as taxnumber, c.account, addr.country as country, addr.state as state, addr.zip_code as zipcode, addr.city as city, addr.street as street from customer_view c left join(select * from customer_addresses limit 1) addr on c.code = addr.code where customer_type = 'CUSTOMER_OWN'"}},"fields":{"posdate":{"fieldtype":"date","wheretype":"in","description":"Date","orderby":0,"defvalue":"0"},"curr":{"fieldtype":"string","wheretype":"where","description":"Currency","orderby":1,"sqlstr":" t.currency_code = @curr"},"transdate_from":{"fieldtype":"date","wheretype":"where","description":"Inv. Date >=","orderby":2,"sqlstr":" t.trans_date >= @transdate_from"},"transdate_to":{"fieldtype":"date","wheretype":"where","description":"Inv. Date <=","orderby":3,"sqlstr":" t.trans_date <= @transdate_to"},"duedate_from":{"fieldtype":"date","wheretype":"where","description":"Due Date >=","orderby":4,"sqlstr":" t.due_time >= @duedate_from"},"duedate_to":{"fieldtype":"date","wheretype":"where","description":"Due Date <=","orderby":5,"sqlstr":" t.due_time <= @duedate_to"},"customer":{"fieldtype":"string","wheretype":"where","description":"Customer/Supplier","orderby":6,"sqlstr":" t.invoice_customer_name like @customer"}},"data":{"labels":{"lb_create_date":"Create date:","lb_curr":"Curr","lb_customer":"Customer","lb_customers":"Accounts Receivable","lb_custpos":"Payments Due List","lb_days":"Days","lb_duedate":"Due Date","lb_invoice_no":"Invoice No.","lb_no":"No.","lb_overdue":"Overdue","lb_paid_amount":"Paid","lb_report_date":"Report date:","lb_sum_amount":"Amount","lb_suppliers":"Accounts Payable","lb_transdate":"Inv. Date","web_link":"http://nervatura.com","web_page":"www.nervatura.com"}}}