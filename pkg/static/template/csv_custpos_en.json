{"meta":{"report_key":"csv_custpos_en","report_type":"REPORT","report_name":"Payments Due List - CSV output","description":"Accounts Payable and Receivable.","label":"Invoice","file_type":"FILE_CSV"},"details":[{"columns":["duedate","transdate","invoice_no","customer","curr","sum_amount","paid_amount","overdue","days"],"name":"payable","databind":"suppliers"},{"columns":["duedate","transdate","invoice_no","customer","curr","sum_amount","paid_amount","overdue","days"],"name":"receivable","databind":"customers"}],"sources":{"customers":{"default":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, cast(t.due_time as date) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, cast(t.due_time as date)-@posdate as days, case when cast(t.due_time as date)-@posdate<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by (cast(t.due_time as date)-@posdate), cast(t.due_time as date), t.id","mssql":"select t.code as invoice_no, t.invoice_customer_name as customer, CONVERT(VARCHAR(10), t.trans_date, 120) as transdate, CONVERT(VARCHAR(10), t.due_time, 120) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select ti.trans_code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), CONVERT(VARCHAR(10), t.due_time, 120), t.id","mysql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), substr(cast(t.due_time as char(10)), 1, 10), t.id","sqlite":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, julianday(t.due_time)-julianday(@posdate) as days, case when julianday(t.due_time)-julianday(@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_OUT' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by julianday(t.due_time)-julianday(@posdate), substr(cast(t.due_time as char(10)), 1, 10), t.id"},"suppliers":{"default":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, cast(t.due_time as date) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, cast(t.due_time as date)-@posdate as days, case when cast(t.due_time as date)-@posdate<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by (cast(t.due_time as date)-@posdate), cast(t.due_time as date), t.id","mssql":"select t.code as invoice_no, t.invoice_customer_name as customer, CONVERT(VARCHAR(10), t.trans_date, 120) as transdate, CONVERT(VARCHAR(10), t.due_time, 120) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select ti.trans_code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), CONVERT(VARCHAR(10), t.due_time, 120), t.id","mysql":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, DATEDIFF(t.due_time,@posdate) as days, case when DATEDIFF(t.due_time,@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by DATEDIFF(t.due_time,@posdate), substr(cast(t.due_time as char(10)), 1, 10), t.id","sqlite":"select t.code as invoice_no, t.invoice_customer_name as customer, t.trans_date as transdate, substr(cast(t.due_time as char(10)), 1, 10) as duedate, t.currency_code as curr, t.paid_type as paidtypedesc, tsum.sum_amount, case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as paid_amount, tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end as pdiff, julianday(t.due_time)-julianday(@posdate) as days, case when julianday(t.due_time)-julianday(@posdate)<0 then tsum.sum_amount-case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end else 0 end as overdue from trans_view t  left join (select ti.trans_code as code, sum(amount) as sum_amount from item_view ti group by ti.trans_code) as tsum on tsum.code = t.code left join (select l.link_code_2 as trans_code, sum(rate*qty) as paid_amount from link_view l inner join payment pm on l.link_code_1=pm.code and pm.deleted=false where l.link_type_1 = 'LINK_PAYMENT' and l.link_type_2 = 'LINK_TRANS' and pm.paid_date<=@posdate group by l.link_code_2) as tpaid on tpaid.trans_code=t.code where t.paid = false and t.trans_type = 'TRANS_INVOICE' and t.direction = 'DIRECTION_IN' and tsum.sum_amount<>case when tpaid.paid_amount is null then 0 else tpaid.paid_amount end @where_str order by julianday(t.due_time)-julianday(@posdate), substr(cast(t.due_time as char(10)), 1, 10), t.id"}},"fields":{"posdate":{"fieldtype":"date","wheretype":"in","description":"Date","orderby":0,"defvalue":"0"},"curr":{"fieldtype":"string","wheretype":"where","description":"Currency","orderby":1,"sqlstr":" t.currency_code = @curr"},"transdate_from":{"fieldtype":"date","wheretype":"where","description":"Inv. Date >=","orderby":2,"sqlstr":" t.trans_date >= @transdate_from"},"transdate_to":{"fieldtype":"date","wheretype":"where","description":"Inv. Date <=","orderby":3,"sqlstr":" t.trans_date <= @transdate_to"},"duedate_from":{"fieldtype":"date","wheretype":"where","description":"Due Date >=","orderby":4,"sqlstr":" t.due_time >= @duedate_from"},"duedate_to":{"fieldtype":"date","wheretype":"where","description":"Due Date <=","orderby":5,"sqlstr":" t.due_time <= @duedate_to"},"customer":{"fieldtype":"string","wheretype":"where","description":"Customer/Supplier","orderby":6,"sqlstr":" t.invoice_customer_name like @customer"}},"data":{"labels":{"duedate":"Due Date","transdate":"Invoice Date","invoice_no":"Invoice No.","customer":"Customer","curr":"Currency","sum_amount":"Amount","paid_amount":"Paid","overdue":"Overdue","days":"Days"}}}