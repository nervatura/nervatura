# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tapi.proto\x12\tnervatura\"E\n\x05Value\x12\x11\n\x07\x62oolean\x18\x01 \x01(\x08H\x00\x12\x10\n\x06number\x18\x02 \x01(\x01H\x00\x12\x0e\n\x04text\x18\x03 \x01(\tH\x00\x42\x07\n\x05value\"\xbf\x01\n\x0cResponseRows\x12+\n\x05items\x18\x01 \x03(\x0b\x32\x1c.nervatura.ResponseRows.Item\x1a\x81\x01\n\x04Item\x12\x38\n\x06values\x18\x01 \x03(\x0b\x32(.nervatura.ResponseRows.Item.ValuesEntry\x1a?\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.nervatura.Value:\x02\x38\x01\"\x0e\n\x0cRequestEmpty\"\x0f\n\rResponseEmpty\"H\n\x10RequestUserLogin\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\"C\n\x11ResponseUserLogin\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0e\n\x06\x65ngine\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\"#\n\x12RequestTokenDecode\x12\r\n\x05value\x18\x01 \x01(\t\"S\n\x13ResponseTokenDecode\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x02 \x01(\t\x12\x0b\n\x03\x65xp\x18\x03 \x01(\x01\x12\x0b\n\x03iss\x18\x04 \x01(\t\"%\n\x14ResponseTokenRefresh\x12\r\n\x05value\x18\x01 \x01(\t\"{\n\x12ResponseTokenLogin\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x11\n\tempnumber\x18\x03 \x01(\t\x12\x11\n\tusergroup\x18\x04 \x01(\x03\x12\r\n\x05scope\x18\x05 \x01(\t\x12\x12\n\ndepartment\x18\x06 \x01(\t\"^\n\x13RequestUserPassword\x12\x10\n\x08password\x18\x01 \x01(\t\x12\x0f\n\x07\x63onfirm\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x03 \x01(\t\x12\x12\n\ncustnumber\x18\x04 \x01(\t\"4\n\x15RequestDatabaseCreate\x12\r\n\x05\x61lias\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x65mo\x18\x02 \x01(\x08\"B\n\x16ResponseDatabaseCreate\x12(\n\x07\x64\x65tails\x18\x01 \x01(\x0b\x32\x17.nervatura.ResponseRows\"P\n\rRequestDelete\x12&\n\tnervatype\x18\x01 \x01(\x0e\x32\x13.nervatura.DataType\x12\n\n\x02id\x18$ \x01(\x03\x12\x0b\n\x03key\x18% \x01(\t\"\x82\x01\n\x0bRequestView\x12-\n\x07options\x18\x01 \x03(\x0b\x32\x1c.nervatura.RequestView.Query\x1a\x44\n\x05Query\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12 \n\x06values\x18\x03 \x03(\x0b\x32\x10.nervatura.Value\"\x8b\x01\n\x0cResponseView\x12\x33\n\x06values\x18\x01 \x03(\x0b\x32#.nervatura.ResponseView.ValuesEntry\x1a\x46\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.nervatura.ResponseRows:\x02\x38\x01\"\xa6\x01\n\x0fRequestFunction\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x36\n\x06values\x18\x02 \x03(\x0b\x32&.nervatura.RequestFunction.ValuesEntry\x12\r\n\x05value\x18\x03 \x01(\x0c\x1a?\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.nervatura.Value:\x02\x38\x01\"!\n\x10ResponseFunction\x12\r\n\x05value\x18\x01 \x01(\x0c\"\"\n\x11RequestReportList\x12\r\n\x05label\x18\x01 \x01(\t\"\xce\x01\n\x12ResponseReportList\x12\x31\n\x05items\x18\x01 \x03(\x0b\x32\".nervatura.ResponseReportList.Info\x1a\x84\x01\n\x04Info\x12\x11\n\treportkey\x18\x01 \x01(\t\x12\x0f\n\x07repname\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05label\x18\x04 \x01(\t\x12\x0f\n\x07reptype\x18\x05 \x01(\t\x12\x10\n\x08\x66ilename\x18\x06 \x01(\t\x12\x11\n\tinstalled\x18\x07 \x01(\x08\")\n\x14RequestReportInstall\x12\x11\n\treportkey\x18\x01 \x01(\t\"#\n\x15ResponseReportInstall\x12\n\n\x02id\x18\x01 \x01(\x03\"(\n\x13RequestReportDelete\x12\x11\n\treportkey\x18\x01 \x01(\t\"\xe7\x02\n\rRequestReport\x12\x11\n\treportkey\x18\x01 \x01(\t\x12\x31\n\x0borientation\x18\x02 \x01(\x0e\x32\x1c.nervatura.ReportOrientation\x12#\n\x04size\x18\x03 \x01(\x0e\x32\x15.nervatura.ReportSize\x12\'\n\x06output\x18\x04 \x01(\x0e\x32\x17.nervatura.ReportOutput\x12#\n\x04type\x18\x05 \x01(\x0e\x32\x15.nervatura.ReportType\x12\x11\n\trefnumber\x18\x06 \x01(\t\x12\x10\n\x08template\x18\x07 \x01(\t\x12\x36\n\x07\x66ilters\x18\x08 \x03(\x0b\x32%.nervatura.RequestReport.FiltersEntry\x1a@\n\x0c\x46iltersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.nervatura.Value:\x02\x38\x01\"\x1f\n\x0eResponseReport\x12\r\n\x05value\x18\x01 \x01(\x0c\"\xe0\x02\n\rRequestUpdate\x12&\n\tnervatype\x18\x01 \x01(\x0e\x32\x13.nervatura.DataType\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.nervatura.RequestUpdate.Item\x1a\xf8\x01\n\x04Item\x12\x39\n\x06values\x18\x01 \x03(\x0b\x32).nervatura.RequestUpdate.Item.ValuesEntry\x12\x35\n\x04keys\x18\x02 \x03(\x0b\x32\'.nervatura.RequestUpdate.Item.KeysEntry\x1a?\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.nervatura.Value:\x02\x38\x01\x1a=\n\tKeysEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1f\n\x05value\x18\x02 \x01(\x0b\x32\x10.nervatura.Value:\x02\x38\x01\" \n\x0eResponseUpdate\x12\x0e\n\x06values\x18\x01 \x03(\x03\"c\n\nRequestGet\x12&\n\tnervatype\x18\x01 \x01(\x0e\x32\x13.nervatura.DataType\x12\x10\n\x08metadata\x18\x02 \x01(\x08\x12\x0b\n\x03ids\x18\x03 \x03(\x03\x12\x0e\n\x06\x66ilter\x18\x07 \x03(\t\"\xb1\n\n\x0bResponseGet\x12,\n\x06values\x18\x01 \x03(\x0b\x32\x1c.nervatura.ResponseGet.Value\x1a\xf3\t\n\x05Value\x12%\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0b\x32\x12.nervatura.AddressH\x00\x12%\n\x07\x62\x61rcode\x18\x02 \x01(\x0b\x32\x12.nervatura.BarcodeH\x00\x12%\n\x07\x63ontact\x18\x03 \x01(\x0b\x32\x12.nervatura.ContactH\x00\x12\'\n\x08\x63urrency\x18\x04 \x01(\x0b\x32\x13.nervatura.CurrencyH\x00\x12\'\n\x08\x63ustomer\x18\x05 \x01(\x0b\x32\x13.nervatura.CustomerH\x00\x12\'\n\x08\x64\x65\x66\x66ield\x18\x06 \x01(\x0b\x32\x13.nervatura.DeffieldH\x00\x12\'\n\x08\x65mployee\x18\x07 \x01(\x0b\x32\x13.nervatura.EmployeeH\x00\x12!\n\x05\x65vent\x18\x08 \x01(\x0b\x32\x10.nervatura.EventH\x00\x12+\n\nfieldvalue\x18\t \x01(\x0b\x32\x15.nervatura.FieldvalueH\x00\x12#\n\x06groups\x18\n \x01(\x0b\x32\x11.nervatura.GroupsH\x00\x12\x1f\n\x04item\x18\x0b \x01(\x0b\x32\x0f.nervatura.ItemH\x00\x12\x1f\n\x04link\x18\x0c \x01(\x0b\x32\x0f.nervatura.LinkH\x00\x12\x1d\n\x03log\x18\r \x01(\x0b\x32\x0e.nervatura.LogH\x00\x12\'\n\x08movement\x18\x0e \x01(\x0b\x32\x13.nervatura.MovementH\x00\x12)\n\tnumberdef\x18\x0f \x01(\x0b\x32\x14.nervatura.NumberdefH\x00\x12%\n\x07pattern\x18\x10 \x01(\x0b\x32\x12.nervatura.PatternH\x00\x12%\n\x07payment\x18\x11 \x01(\x0b\x32\x12.nervatura.PaymentH\x00\x12!\n\x05place\x18\x12 \x01(\x0b\x32\x10.nervatura.PlaceH\x00\x12!\n\x05price\x18\x13 \x01(\x0b\x32\x10.nervatura.PriceH\x00\x12%\n\x07product\x18\x14 \x01(\x0b\x32\x12.nervatura.ProductH\x00\x12%\n\x07project\x18\x15 \x01(\x0b\x32\x12.nervatura.ProjectH\x00\x12\x1f\n\x04rate\x18\x16 \x01(\x0b\x32\x0f.nervatura.RateH\x00\x12\x1d\n\x03tax\x18\x17 \x01(\x0b\x32\x0e.nervatura.TaxH\x00\x12\x1f\n\x04tool\x18\x18 \x01(\x0b\x32\x0f.nervatura.ToolH\x00\x12!\n\x05trans\x18\x19 \x01(\x0b\x32\x10.nervatura.TransH\x00\x12&\n\x08ui_audit\x18\x1a \x01(\x0b\x32\x12.nervatura.UiAuditH\x00\x12$\n\x07ui_menu\x18\x1b \x01(\x0b\x32\x11.nervatura.UiMenuH\x00\x12\x30\n\rui_menufields\x18\x1c \x01(\x0b\x32\x17.nervatura.UiMenufieldsH\x00\x12*\n\nui_message\x18\x1d \x01(\x0b\x32\x14.nervatura.UiMessageH\x00\x12\x30\n\rui_printqueue\x18\x1e \x01(\x0b\x32\x17.nervatura.UiPrintqueueH\x00\x12(\n\tui_report\x18\x1f \x01(\x0b\x32\x13.nervatura.UiReportH\x00\x12\x30\n\rui_userconfig\x18  \x01(\x0b\x32\x17.nervatura.UiUserconfigH\x00\x42\x07\n\x05value\"Z\n\x08MetaData\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tfieldname\x18\x02 \x01(\t\x12\x11\n\tfieldtype\x18\x03 \x01(\t\x12\r\n\x05value\x18\x04 \x01(\t\x12\r\n\x05notes\x18\x05 \x01(\t\"\xbd\x01\n\x07\x41\x64\x64ress\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tnervatype\x18\x02 \x01(\x03\x12\x0e\n\x06ref_id\x18\x03 \x01(\x03\x12\x0f\n\x07\x63ountry\x18\x04 \x01(\t\x12\r\n\x05state\x18\x05 \x01(\t\x12\x0f\n\x07zipcode\x18\x06 \x01(\t\x12\x0c\n\x04\x63ity\x18\x07 \x01(\t\x12\x0e\n\x06street\x18\x08 \x01(\t\x12\r\n\x05notes\x18\t \x01(\t\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaData\"\x7f\n\x07\x42\x61rcode\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x12\n\nproduct_id\x18\x03 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x13\n\x0b\x62\x61rcodetype\x18\x05 \x01(\x03\x12\x0b\n\x03qty\x18\x06 \x01(\x01\x12\x0f\n\x07\x64\x65\x66\x63ode\x18\x07 \x01(\x08\"\xdc\x01\n\x07\x43ontact\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tnervatype\x18\x02 \x01(\x03\x12\x0e\n\x06ref_id\x18\x03 \x01(\x03\x12\x11\n\tfirstname\x18\x04 \x01(\t\x12\x0f\n\x07surname\x18\x05 \x01(\t\x12\x0e\n\x06status\x18\x06 \x01(\t\x12\r\n\x05phone\x18\x07 \x01(\t\x12\x0b\n\x03\x66\x61x\x18\x08 \x01(\t\x12\r\n\x05mobil\x18\t \x01(\t\x12\r\n\x05\x65mail\x18\n \x01(\t\x12\r\n\x05notes\x18\x0b \x01(\t\x12%\n\x08metadata\x18\x0c \x03(\x0b\x32\x13.nervatura.MetaData\"\x90\x01\n\x08\x43urrency\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04\x63urr\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05\x64igit\x18\x04 \x01(\x03\x12\x0f\n\x07\x64\x65\x66rate\x18\x05 \x01(\x01\x12\x0e\n\x06\x63round\x18\x06 \x01(\x03\x12%\n\x08metadata\x18\x07 \x03(\x0b\x32\x13.nervatura.MetaData\"\xff\x01\n\x08\x43ustomer\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08\x63usttype\x18\x02 \x01(\x03\x12\x12\n\ncustnumber\x18\x03 \x01(\t\x12\x10\n\x08\x63ustname\x18\x04 \x01(\t\x12\x11\n\ttaxnumber\x18\x05 \x01(\t\x12\x0f\n\x07\x61\x63\x63ount\x18\x06 \x01(\t\x12\r\n\x05notax\x18\x07 \x01(\x08\x12\r\n\x05terms\x18\x08 \x01(\x03\x12\x13\n\x0b\x63reditlimit\x18\t \x01(\x01\x12\x10\n\x08\x64iscount\x18\n \x01(\x01\x12\r\n\x05notes\x18\x0b \x01(\t\x12\x10\n\x08inactive\x18\x0c \x01(\x08\x12%\n\x08metadata\x18\r \x03(\x0b\x32\x13.nervatura.MetaData\"\xcc\x01\n\x08\x44\x65\x66\x66ield\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tfieldname\x18\x02 \x01(\t\x12\x11\n\tnervatype\x18\x03 \x01(\x03\x12\x14\n\x07subtype\x18\x04 \x01(\x03H\x00\x88\x01\x01\x12\x11\n\tfieldtype\x18\x05 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\x12\x11\n\tvaluelist\x18\x07 \x01(\t\x12\x0e\n\x06\x61\x64\x64new\x18\x08 \x01(\x08\x12\x0f\n\x07visible\x18\t \x01(\x08\x12\x10\n\x08readonly\x18\n \x01(\x08\x42\n\n\x08_subtype\"\xa3\x02\n\x08\x45mployee\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tempnumber\x18\x02 \x01(\t\x12\x15\n\x08username\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\x11\n\tusergroup\x18\x04 \x01(\x03\x12\x16\n\tstartdate\x18\x05 \x01(\tH\x01\x88\x01\x01\x12\x14\n\x07\x65nddate\x18\x06 \x01(\tH\x02\x88\x01\x01\x12\x17\n\ndepartment\x18\x07 \x01(\x03H\x03\x88\x01\x01\x12\x18\n\x10registration_key\x18\x08 \x01(\t\x12\x10\n\x08inactive\x18\t \x01(\x08\x12%\n\x08metadata\x18\r \x03(\x0b\x32\x13.nervatura.MetaDataB\x0b\n\t_usernameB\x0c\n\n_startdateB\n\n\x08_enddateB\r\n\x0b_department\"\x8c\x02\n\x05\x45vent\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tcalnumber\x18\x02 \x01(\t\x12\x11\n\tnervatype\x18\x03 \x01(\x03\x12\x0e\n\x06ref_id\x18\x04 \x01(\x03\x12\x0b\n\x03uid\x18\x05 \x01(\t\x12\x17\n\neventgroup\x18\x06 \x01(\x03H\x00\x88\x01\x01\x12\x10\n\x08\x66romdate\x18\x07 \x01(\t\x12\x13\n\x06todate\x18\x08 \x01(\tH\x01\x88\x01\x01\x12\x0f\n\x07subject\x18\t \x01(\t\x12\r\n\x05place\x18\n \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x0b \x01(\t\x12%\n\x08metadata\x18\x0c \x03(\x0b\x32\x13.nervatura.MetaDataB\r\n\x0b_eventgroupB\t\n\x07_todate\"i\n\nFieldvalue\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tfieldname\x18\x02 \x01(\t\x12\x13\n\x06ref_id\x18\x03 \x01(\x03H\x00\x88\x01\x01\x12\r\n\x05value\x18\x04 \x01(\t\x12\r\n\x05notes\x18\x05 \x01(\tB\t\n\x07_ref_id\"b\n\x06Groups\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tgroupname\x18\x02 \x01(\t\x12\x12\n\ngroupvalue\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x10\n\x08inactive\x18\x05 \x01(\x08\"\xb0\x02\n\x04Item\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08trans_id\x18\x02 \x01(\x03\x12\x12\n\nproduct_id\x18\x03 \x01(\x03\x12\x0c\n\x04unit\x18\x04 \x01(\t\x12\x0b\n\x03qty\x18\x05 \x01(\x01\x12\x0f\n\x07\x66xprice\x18\x06 \x01(\x01\x12\x11\n\tnetamount\x18\x07 \x01(\x01\x12\x10\n\x08\x64iscount\x18\x08 \x01(\x01\x12\x0e\n\x06tax_id\x18\t \x01(\x03\x12\x11\n\tvatamount\x18\n \x01(\x01\x12\x0e\n\x06\x61mount\x18\x0b \x01(\x01\x12\x13\n\x0b\x64\x65scription\x18\x0c \x01(\t\x12\x0f\n\x07\x64\x65posit\x18\r \x01(\x08\x12\x10\n\x08ownstock\x18\x0e \x01(\x01\x12\x13\n\x0b\x61\x63tionprice\x18\x0f \x01(\x08\x12%\n\x08metadata\x18\x10 \x03(\x0b\x32\x13.nervatura.MetaData\"\x87\x01\n\x04Link\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x13\n\x0bnervatype_1\x18\x02 \x01(\x03\x12\x10\n\x08ref_id_1\x18\x03 \x01(\x03\x12\x13\n\x0bnervatype_2\x18\x04 \x01(\x03\x12\x10\n\x08ref_id_2\x18\x05 \x01(\x03\x12%\n\x08metadata\x18\x10 \x03(\x0b\x32\x13.nervatura.MetaData\"\xb5\x01\n\x03Log\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x13\n\x0b\x65mployee_id\x18\x02 \x01(\x03\x12\x0e\n\x06\x63rdate\x18\x03 \x01(\t\x12\x16\n\tnervatype\x18\x04 \x01(\x03H\x00\x88\x01\x01\x12\x13\n\x06ref_id\x18\x05 \x01(\x03H\x01\x88\x01\x01\x12\x10\n\x08logstate\x18\x06 \x01(\x03\x12%\n\x08metadata\x18\x10 \x03(\x0b\x32\x13.nervatura.MetaDataB\x0c\n\n_nervatypeB\t\n\x07_ref_id\"\x97\x02\n\x08Movement\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08trans_id\x18\x02 \x01(\x03\x12\x14\n\x0cshippingdate\x18\x03 \x01(\t\x12\x10\n\x08movetype\x18\x04 \x01(\x03\x12\x17\n\nproduct_id\x18\x05 \x01(\x03H\x00\x88\x01\x01\x12\x14\n\x07tool_id\x18\x06 \x01(\x03H\x01\x88\x01\x01\x12\x15\n\x08place_id\x18\x07 \x01(\x03H\x02\x88\x01\x01\x12\x0b\n\x03qty\x18\x08 \x01(\x01\x12\x13\n\x0b\x64\x65scription\x18\t \x01(\t\x12\x0e\n\x06shared\x18\n \x01(\x08\x12%\n\x08metadata\x18\x10 \x03(\x0b\x32\x13.nervatura.MetaDataB\r\n\x0b_product_idB\n\n\x08_tool_idB\x0b\n\t_place_id\"\xbf\x01\n\tNumberdef\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tnumberkey\x18\x02 \x01(\t\x12\x0e\n\x06prefix\x18\x03 \x01(\t\x12\x10\n\x08\x63urvalue\x18\x04 \x01(\x03\x12\x0e\n\x06isyear\x18\x05 \x01(\x08\x12\x0b\n\x03sep\x18\x06 \x01(\t\x12\x0b\n\x03len\x18\x07 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x08 \x01(\t\x12\x0f\n\x07visible\x18\t \x01(\x08\x12\x10\n\x08readonly\x18\n \x01(\x08\x12\x0f\n\x07orderby\x18\x0b \x01(\x03\"`\n\x07Pattern\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x11\n\ttranstype\x18\x03 \x01(\x03\x12\r\n\x05notes\x18\x04 \x01(\t\x12\x12\n\ndefpattern\x18\x05 \x01(\x08\"\x7f\n\x07Payment\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08trans_id\x18\x02 \x01(\x03\x12\x10\n\x08paiddate\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x01\x12\r\n\x05notes\x18\x05 \x01(\t\x12%\n\x08metadata\x18\x06 \x03(\x0b\x32\x13.nervatura.MetaData\"\xc4\x01\n\x05Place\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tplanumber\x18\x02 \x01(\t\x12\x11\n\tplacetype\x18\x03 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x11\n\x04\x63urr\x18\x05 \x01(\tH\x00\x88\x01\x01\x12\x10\n\x08\x64\x65\x66place\x18\x06 \x01(\x08\x12\r\n\x05notes\x18\x07 \x01(\t\x12\x10\n\x08inactive\x18\x08 \x01(\x08\x12%\n\x08metadata\x18\t \x03(\x0b\x32\x13.nervatura.MetaDataB\x07\n\x05_curr\"\xc7\x01\n\x05Price\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x12\n\nproduct_id\x18\x02 \x01(\x03\x12\x11\n\tvalidfrom\x18\x03 \x01(\t\x12\x14\n\x07validto\x18\x04 \x01(\tH\x00\x88\x01\x01\x12\x0c\n\x04\x63urr\x18\x05 \x01(\t\x12\x0b\n\x03qty\x18\x06 \x01(\x01\x12\x12\n\npricevalue\x18\x07 \x01(\x01\x12\x13\n\x0bvendorprice\x18\x08 \x01(\x08\x12%\n\x08metadata\x18\t \x03(\x0b\x32\x13.nervatura.MetaDataB\n\n\x08_validto\"\xc6\x01\n\x07Product\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x12\n\npartnumber\x18\x02 \x01(\t\x12\x0f\n\x07protype\x18\x03 \x01(\x03\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x0c\n\x04unit\x18\x05 \x01(\t\x12\x0e\n\x06tax_id\x18\x06 \x01(\x03\x12\r\n\x05notes\x18\x07 \x01(\t\x12\x0f\n\x07webitem\x18\x08 \x01(\x08\x12\x10\n\x08inactive\x18\t \x01(\x08\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaData\"\xf7\x01\n\x07Project\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tpronumber\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x18\n\x0b\x63ustomer_id\x18\x04 \x01(\x03H\x00\x88\x01\x01\x12\x16\n\tstartdate\x18\x05 \x01(\tH\x01\x88\x01\x01\x12\x14\n\x07\x65nddate\x18\x06 \x01(\tH\x02\x88\x01\x01\x12\r\n\x05notes\x18\x07 \x01(\t\x12\x10\n\x08inactive\x18\x08 \x01(\x08\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaDataB\x0e\n\x0c_customer_idB\x0c\n\n_startdateB\n\n\x08_enddate\"\xc8\x01\n\x04Rate\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x10\n\x08ratetype\x18\x02 \x01(\x03\x12\x10\n\x08ratedate\x18\x03 \x01(\t\x12\x0c\n\x04\x63urr\x18\x04 \x01(\t\x12\x15\n\x08place_id\x18\x05 \x01(\x03H\x00\x88\x01\x01\x12\x16\n\trategroup\x18\x06 \x01(\x03H\x01\x88\x01\x01\x12\x11\n\tratevalue\x18\x07 \x01(\x01\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaDataB\x0b\n\t_place_idB\x0c\n\n_rategroup\"~\n\x03Tax\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07taxcode\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0c\n\x04rate\x18\x04 \x01(\x01\x12\x10\n\x08inactive\x18\x05 \x01(\x08\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaData\"\xb9\x01\n\x04Tool\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0e\n\x06serial\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x12\n\nproduct_id\x18\x04 \x01(\x03\x12\x16\n\ttoolgroup\x18\x05 \x01(\x03H\x00\x88\x01\x01\x12\r\n\x05notes\x18\x06 \x01(\t\x12\x10\n\x08inactive\x18\x07 \x01(\x08\x12%\n\x08metadata\x18\n \x03(\x0b\x32\x13.nervatura.MetaDataB\x0c\n\n_toolgroup\"\xf4\x04\n\x05Trans\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x13\n\x0btransnumber\x18\x02 \x01(\t\x12\x11\n\ttranstype\x18\x03 \x01(\x03\x12\x11\n\tdirection\x18\x04 \x01(\x03\x12\x1c\n\x0fref_transnumber\x18\x05 \x01(\tH\x00\x88\x01\x01\x12\x0e\n\x06\x63rdate\x18\x06 \x01(\t\x12\x11\n\ttransdate\x18\x07 \x01(\t\x12\x14\n\x07\x64uedate\x18\x08 \x01(\tH\x01\x88\x01\x01\x12\x18\n\x0b\x63ustomer_id\x18\t \x01(\x03H\x02\x88\x01\x01\x12\x18\n\x0b\x65mployee_id\x18\n \x01(\x03H\x03\x88\x01\x01\x12\x17\n\ndepartment\x18\x0b \x01(\x03H\x04\x88\x01\x01\x12\x17\n\nproject_id\x18\x0c \x01(\x03H\x05\x88\x01\x01\x12\x15\n\x08place_id\x18\r \x01(\x03H\x06\x88\x01\x01\x12\x15\n\x08paidtype\x18\x0e \x01(\x03H\x07\x88\x01\x01\x12\x11\n\x04\x63urr\x18\x0f \x01(\tH\x08\x88\x01\x01\x12\r\n\x05notax\x18\x10 \x01(\x08\x12\x0c\n\x04paid\x18\x11 \x01(\x08\x12\x0e\n\x06\x61\x63rate\x18\x12 \x01(\x01\x12\r\n\x05notes\x18\x13 \x01(\t\x12\x10\n\x08intnotes\x18\x14 \x01(\t\x12\r\n\x05\x66note\x18\x15 \x01(\t\x12\x11\n\ttranstate\x18\x16 \x01(\x03\x12\x0e\n\x06\x63losed\x18\x17 \x01(\x08\x12%\n\x08metadata\x18\x18 \x03(\x0b\x32\x13.nervatura.MetaDataB\x12\n\x10_ref_transnumberB\n\n\x08_duedateB\x0e\n\x0c_customer_idB\x0e\n\x0c_employee_idB\r\n\x0b_departmentB\r\n\x0b_project_idB\x0b\n\t_place_idB\x0b\n\t_paidtypeB\x07\n\x05_curr\"\x86\x01\n\x07UiAudit\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\tusergroup\x18\x02 \x01(\x03\x12\x11\n\tnervatype\x18\x03 \x01(\x03\x12\x14\n\x07subtype\x18\x04 \x01(\x03H\x00\x88\x01\x01\x12\x13\n\x0binputfilter\x18\x05 \x01(\x03\x12\x12\n\nsupervisor\x18\x06 \x01(\x08\x42\n\n\x08_subtype\"\x8a\x01\n\x06UiMenu\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07menukey\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\r\n\x05modul\x18\x04 \x01(\t\x12\x0c\n\x04icon\x18\x05 \x01(\t\x12\x0e\n\x06method\x18\x06 \x01(\x03\x12\x10\n\x08\x66uncname\x18\x07 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x08 \x01(\t\"w\n\x0cUiMenufields\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07menu_id\x18\x02 \x01(\x03\x12\x11\n\tfieldname\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x11\n\tfieldtype\x18\x05 \x01(\x03\x12\x0f\n\x07orderby\x18\x06 \x01(\x03\"V\n\tUiMessage\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07secname\x18\x02 \x01(\t\x12\x11\n\tfieldname\x18\x03 \x01(\t\x12\x0c\n\x04lang\x18\x04 \x01(\t\x12\x0b\n\x03msg\x18\x05 \x01(\t\"\xaa\x01\n\x0cUiPrintqueue\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x16\n\tnervatype\x18\x02 \x01(\x03H\x00\x88\x01\x01\x12\x0e\n\x06ref_id\x18\x03 \x01(\x03\x12\x0b\n\x03qty\x18\x04 \x01(\x01\x12\x18\n\x0b\x65mployee_id\x18\x05 \x01(\x03H\x01\x88\x01\x01\x12\x11\n\treport_id\x18\x06 \x01(\x03\x12\x0e\n\x06\x63rdate\x18\x07 \x01(\tB\x0c\n\n_nervatypeB\x0e\n\x0c_employee_id\"\xdf\x01\n\x08UiReport\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x11\n\treportkey\x18\x02 \x01(\t\x12\x11\n\tnervatype\x18\x03 \x01(\x03\x12\x16\n\ttranstype\x18\x04 \x01(\x03H\x00\x88\x01\x01\x12\x16\n\tdirection\x18\x05 \x01(\x03H\x01\x88\x01\x01\x12\x0f\n\x07repname\x18\x06 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x07 \x01(\t\x12\r\n\x05label\x18\x08 \x01(\t\x12\x10\n\x08\x66iletype\x18\t \x01(\x03\x12\x0e\n\x06report\x18\n \x01(\tB\x0c\n\n_transtypeB\x0c\n\n_direction\"\xba\x01\n\x0cUiUserconfig\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x18\n\x0b\x65mployee_id\x18\x02 \x01(\x03H\x00\x88\x01\x01\x12\x14\n\x07section\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x0f\n\x07\x63\x66group\x18\x04 \x01(\t\x12\x0e\n\x06\x63\x66name\x18\x05 \x01(\t\x12\x14\n\x07\x63\x66value\x18\x06 \x01(\tH\x02\x88\x01\x01\x12\x0f\n\x07orderby\x18\x07 \x01(\x03\x42\x0e\n\x0c_employee_idB\n\n\x08_sectionB\n\n\x08_cfvalue*\xaf\x03\n\x08\x44\x61taType\x12\x0b\n\x07\x61\x64\x64ress\x10\x00\x12\x0b\n\x07\x62\x61rcode\x10\x01\x12\x0b\n\x07\x63ontact\x10\x02\x12\x0c\n\x08\x63urrency\x10\x03\x12\x0c\n\x08\x63ustomer\x10\x04\x12\x0c\n\x08\x64\x65\x66\x66ield\x10\x05\x12\x0c\n\x08\x65mployee\x10\x06\x12\t\n\x05\x65vent\x10\x07\x12\x0e\n\nfieldvalue\x10\x08\x12\n\n\x06groups\x10\t\x12\x08\n\x04item\x10\n\x12\x08\n\x04link\x10\x0b\x12\x07\n\x03log\x10\x0c\x12\x0c\n\x08movement\x10\r\x12\r\n\tnumberdef\x10\x0e\x12\x0b\n\x07pattern\x10\x0f\x12\x0b\n\x07payment\x10\x10\x12\t\n\x05place\x10\x11\x12\t\n\x05price\x10\x12\x12\x0b\n\x07product\x10\x13\x12\x0b\n\x07project\x10\x14\x12\x08\n\x04rate\x10\x15\x12\x07\n\x03tax\x10\x16\x12\x08\n\x04tool\x10\x17\x12\t\n\x05trans\x10\x18\x12\x0c\n\x08ui_audit\x10\x19\x12\x0b\n\x07ui_menu\x10\x1a\x12\x11\n\rui_menufields\x10\x1b\x12\x0e\n\nui_message\x10\x1c\x12\x11\n\rui_printqueue\x10\x1d\x12\r\n\tui_report\x10\x1e\x12\x11\n\rui_userconfig\x10\x1f*0\n\x11ReportOrientation\x12\x0c\n\x08portrait\x10\x00\x12\r\n\tlandscape\x10\x01*;\n\nReportSize\x12\x06\n\x02\x61\x33\x10\x00\x12\x06\n\x02\x61\x34\x10\x01\x12\x06\n\x02\x61\x35\x10\x02\x12\n\n\x06letter\x10\x03\x12\t\n\x05legal\x10\x04*7\n\x0cReportOutput\x12\x08\n\x04\x61uto\x10\x00\x12\x07\n\x03xml\x10\x01\x12\x08\n\x04\x64\x61ta\x10\x02\x12\n\n\x06\x62\x61se64\x10\x03*\xb6\x01\n\nReportType\x12\x0f\n\x0breport_none\x10\x00\x12\x13\n\x0freport_customer\x10\x01\x12\x13\n\x0freport_employee\x10\x02\x12\x10\n\x0creport_event\x10\x03\x12\x10\n\x0creport_place\x10\x04\x12\x12\n\x0ereport_product\x10\x05\x12\x12\n\x0ereport_project\x10\x06\x12\x0f\n\x0breport_tool\x10\x07\x12\x10\n\x0creport_trans\x10\x08\x32\xc3\x08\n\x03\x41PI\x12H\n\tUserLogin\x12\x1b.nervatura.RequestUserLogin\x1a\x1c.nervatura.ResponseUserLogin\"\x00\x12J\n\x0cUserPassword\x12\x1e.nervatura.RequestUserPassword\x1a\x18.nervatura.ResponseEmpty\"\x00\x12\x46\n\nTokenLogin\x12\x17.nervatura.RequestEmpty\x1a\x1d.nervatura.ResponseTokenLogin\"\x00\x12J\n\x0cTokenRefresh\x12\x17.nervatura.RequestEmpty\x1a\x1f.nervatura.ResponseTokenRefresh\"\x00\x12N\n\x0bTokenDecode\x12\x1d.nervatura.RequestTokenDecode\x1a\x1e.nervatura.ResponseTokenDecode\"\x00\x12\x36\n\x03Get\x12\x15.nervatura.RequestGet\x1a\x16.nervatura.ResponseGet\"\x00\x12?\n\x06Update\x12\x18.nervatura.RequestUpdate\x1a\x19.nervatura.ResponseUpdate\"\x00\x12>\n\x06\x44\x65lete\x12\x18.nervatura.RequestDelete\x1a\x18.nervatura.ResponseEmpty\"\x00\x12\x39\n\x04View\x12\x16.nervatura.RequestView\x1a\x17.nervatura.ResponseView\"\x00\x12\x45\n\x08\x46unction\x12\x1a.nervatura.RequestFunction\x1a\x1b.nervatura.ResponseFunction\"\x00\x12?\n\x06Report\x12\x18.nervatura.RequestReport\x1a\x19.nervatura.ResponseReport\"\x00\x12K\n\nReportList\x12\x1c.nervatura.RequestReportList\x1a\x1d.nervatura.ResponseReportList\"\x00\x12T\n\rReportInstall\x12\x1f.nervatura.RequestReportInstall\x1a .nervatura.ResponseReportInstall\"\x00\x12J\n\x0cReportDelete\x12\x1e.nervatura.RequestReportDelete\x1a\x18.nervatura.ResponseEmpty\"\x00\x12W\n\x0e\x44\x61tabaseCreate\x12 .nervatura.RequestDatabaseCreate\x1a!.nervatura.ResponseDatabaseCreate\"\x00\x42\x32Z0github.com/nervatura/nervatura/service/pkg/protob\x06proto3')

_DATATYPE = DESCRIPTOR.enum_types_by_name['DataType']
DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
_REPORTORIENTATION = DESCRIPTOR.enum_types_by_name['ReportOrientation']
ReportOrientation = enum_type_wrapper.EnumTypeWrapper(_REPORTORIENTATION)
_REPORTSIZE = DESCRIPTOR.enum_types_by_name['ReportSize']
ReportSize = enum_type_wrapper.EnumTypeWrapper(_REPORTSIZE)
_REPORTOUTPUT = DESCRIPTOR.enum_types_by_name['ReportOutput']
ReportOutput = enum_type_wrapper.EnumTypeWrapper(_REPORTOUTPUT)
_REPORTTYPE = DESCRIPTOR.enum_types_by_name['ReportType']
ReportType = enum_type_wrapper.EnumTypeWrapper(_REPORTTYPE)
address = 0
barcode = 1
contact = 2
currency = 3
customer = 4
deffield = 5
employee = 6
event = 7
fieldvalue = 8
groups = 9
item = 10
link = 11
log = 12
movement = 13
numberdef = 14
pattern = 15
payment = 16
place = 17
price = 18
product = 19
project = 20
rate = 21
tax = 22
tool = 23
trans = 24
ui_audit = 25
ui_menu = 26
ui_menufields = 27
ui_message = 28
ui_printqueue = 29
ui_report = 30
ui_userconfig = 31
portrait = 0
landscape = 1
a3 = 0
a4 = 1
a5 = 2
letter = 3
legal = 4
auto = 0
xml = 1
data = 2
base64 = 3
report_none = 0
report_customer = 1
report_employee = 2
report_event = 3
report_place = 4
report_product = 5
report_project = 6
report_tool = 7
report_trans = 8


_VALUE = DESCRIPTOR.message_types_by_name['Value']
_RESPONSEROWS = DESCRIPTOR.message_types_by_name['ResponseRows']
_RESPONSEROWS_ITEM = _RESPONSEROWS.nested_types_by_name['Item']
_RESPONSEROWS_ITEM_VALUESENTRY = _RESPONSEROWS_ITEM.nested_types_by_name['ValuesEntry']
_REQUESTEMPTY = DESCRIPTOR.message_types_by_name['RequestEmpty']
_RESPONSEEMPTY = DESCRIPTOR.message_types_by_name['ResponseEmpty']
_REQUESTUSERLOGIN = DESCRIPTOR.message_types_by_name['RequestUserLogin']
_RESPONSEUSERLOGIN = DESCRIPTOR.message_types_by_name['ResponseUserLogin']
_REQUESTTOKENDECODE = DESCRIPTOR.message_types_by_name['RequestTokenDecode']
_RESPONSETOKENDECODE = DESCRIPTOR.message_types_by_name['ResponseTokenDecode']
_RESPONSETOKENREFRESH = DESCRIPTOR.message_types_by_name['ResponseTokenRefresh']
_RESPONSETOKENLOGIN = DESCRIPTOR.message_types_by_name['ResponseTokenLogin']
_REQUESTUSERPASSWORD = DESCRIPTOR.message_types_by_name['RequestUserPassword']
_REQUESTDATABASECREATE = DESCRIPTOR.message_types_by_name['RequestDatabaseCreate']
_RESPONSEDATABASECREATE = DESCRIPTOR.message_types_by_name['ResponseDatabaseCreate']
_REQUESTDELETE = DESCRIPTOR.message_types_by_name['RequestDelete']
_REQUESTVIEW = DESCRIPTOR.message_types_by_name['RequestView']
_REQUESTVIEW_QUERY = _REQUESTVIEW.nested_types_by_name['Query']
_RESPONSEVIEW = DESCRIPTOR.message_types_by_name['ResponseView']
_RESPONSEVIEW_VALUESENTRY = _RESPONSEVIEW.nested_types_by_name['ValuesEntry']
_REQUESTFUNCTION = DESCRIPTOR.message_types_by_name['RequestFunction']
_REQUESTFUNCTION_VALUESENTRY = _REQUESTFUNCTION.nested_types_by_name['ValuesEntry']
_RESPONSEFUNCTION = DESCRIPTOR.message_types_by_name['ResponseFunction']
_REQUESTREPORTLIST = DESCRIPTOR.message_types_by_name['RequestReportList']
_RESPONSEREPORTLIST = DESCRIPTOR.message_types_by_name['ResponseReportList']
_RESPONSEREPORTLIST_INFO = _RESPONSEREPORTLIST.nested_types_by_name['Info']
_REQUESTREPORTINSTALL = DESCRIPTOR.message_types_by_name['RequestReportInstall']
_RESPONSEREPORTINSTALL = DESCRIPTOR.message_types_by_name['ResponseReportInstall']
_REQUESTREPORTDELETE = DESCRIPTOR.message_types_by_name['RequestReportDelete']
_REQUESTREPORT = DESCRIPTOR.message_types_by_name['RequestReport']
_REQUESTREPORT_FILTERSENTRY = _REQUESTREPORT.nested_types_by_name['FiltersEntry']
_RESPONSEREPORT = DESCRIPTOR.message_types_by_name['ResponseReport']
_REQUESTUPDATE = DESCRIPTOR.message_types_by_name['RequestUpdate']
_REQUESTUPDATE_ITEM = _REQUESTUPDATE.nested_types_by_name['Item']
_REQUESTUPDATE_ITEM_VALUESENTRY = _REQUESTUPDATE_ITEM.nested_types_by_name['ValuesEntry']
_REQUESTUPDATE_ITEM_KEYSENTRY = _REQUESTUPDATE_ITEM.nested_types_by_name['KeysEntry']
_RESPONSEUPDATE = DESCRIPTOR.message_types_by_name['ResponseUpdate']
_REQUESTGET = DESCRIPTOR.message_types_by_name['RequestGet']
_RESPONSEGET = DESCRIPTOR.message_types_by_name['ResponseGet']
_RESPONSEGET_VALUE = _RESPONSEGET.nested_types_by_name['Value']
_METADATA = DESCRIPTOR.message_types_by_name['MetaData']
_ADDRESS = DESCRIPTOR.message_types_by_name['Address']
_BARCODE = DESCRIPTOR.message_types_by_name['Barcode']
_CONTACT = DESCRIPTOR.message_types_by_name['Contact']
_CURRENCY = DESCRIPTOR.message_types_by_name['Currency']
_CUSTOMER = DESCRIPTOR.message_types_by_name['Customer']
_DEFFIELD = DESCRIPTOR.message_types_by_name['Deffield']
_EMPLOYEE = DESCRIPTOR.message_types_by_name['Employee']
_EVENT = DESCRIPTOR.message_types_by_name['Event']
_FIELDVALUE = DESCRIPTOR.message_types_by_name['Fieldvalue']
_GROUPS = DESCRIPTOR.message_types_by_name['Groups']
_ITEM = DESCRIPTOR.message_types_by_name['Item']
_LINK = DESCRIPTOR.message_types_by_name['Link']
_LOG = DESCRIPTOR.message_types_by_name['Log']
_MOVEMENT = DESCRIPTOR.message_types_by_name['Movement']
_NUMBERDEF = DESCRIPTOR.message_types_by_name['Numberdef']
_PATTERN = DESCRIPTOR.message_types_by_name['Pattern']
_PAYMENT = DESCRIPTOR.message_types_by_name['Payment']
_PLACE = DESCRIPTOR.message_types_by_name['Place']
_PRICE = DESCRIPTOR.message_types_by_name['Price']
_PRODUCT = DESCRIPTOR.message_types_by_name['Product']
_PROJECT = DESCRIPTOR.message_types_by_name['Project']
_RATE = DESCRIPTOR.message_types_by_name['Rate']
_TAX = DESCRIPTOR.message_types_by_name['Tax']
_TOOL = DESCRIPTOR.message_types_by_name['Tool']
_TRANS = DESCRIPTOR.message_types_by_name['Trans']
_UIAUDIT = DESCRIPTOR.message_types_by_name['UiAudit']
_UIMENU = DESCRIPTOR.message_types_by_name['UiMenu']
_UIMENUFIELDS = DESCRIPTOR.message_types_by_name['UiMenufields']
_UIMESSAGE = DESCRIPTOR.message_types_by_name['UiMessage']
_UIPRINTQUEUE = DESCRIPTOR.message_types_by_name['UiPrintqueue']
_UIREPORT = DESCRIPTOR.message_types_by_name['UiReport']
_UIUSERCONFIG = DESCRIPTOR.message_types_by_name['UiUserconfig']
Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), {
  'DESCRIPTOR' : _VALUE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Value)
  })
_sym_db.RegisterMessage(Value)

ResponseRows = _reflection.GeneratedProtocolMessageType('ResponseRows', (_message.Message,), {

  'Item' : _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {

    'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
      'DESCRIPTOR' : _RESPONSEROWS_ITEM_VALUESENTRY,
      '__module__' : 'api_pb2'
      # @@protoc_insertion_point(class_scope:nervatura.ResponseRows.Item.ValuesEntry)
      })
    ,
    'DESCRIPTOR' : _RESPONSEROWS_ITEM,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.ResponseRows.Item)
    })
  ,
  'DESCRIPTOR' : _RESPONSEROWS,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseRows)
  })
_sym_db.RegisterMessage(ResponseRows)
_sym_db.RegisterMessage(ResponseRows.Item)
_sym_db.RegisterMessage(ResponseRows.Item.ValuesEntry)

RequestEmpty = _reflection.GeneratedProtocolMessageType('RequestEmpty', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTEMPTY,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestEmpty)
  })
_sym_db.RegisterMessage(RequestEmpty)

ResponseEmpty = _reflection.GeneratedProtocolMessageType('ResponseEmpty', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEEMPTY,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseEmpty)
  })
_sym_db.RegisterMessage(ResponseEmpty)

RequestUserLogin = _reflection.GeneratedProtocolMessageType('RequestUserLogin', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTUSERLOGIN,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestUserLogin)
  })
_sym_db.RegisterMessage(RequestUserLogin)

ResponseUserLogin = _reflection.GeneratedProtocolMessageType('ResponseUserLogin', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEUSERLOGIN,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseUserLogin)
  })
_sym_db.RegisterMessage(ResponseUserLogin)

RequestTokenDecode = _reflection.GeneratedProtocolMessageType('RequestTokenDecode', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTTOKENDECODE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestTokenDecode)
  })
_sym_db.RegisterMessage(RequestTokenDecode)

ResponseTokenDecode = _reflection.GeneratedProtocolMessageType('ResponseTokenDecode', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSETOKENDECODE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseTokenDecode)
  })
_sym_db.RegisterMessage(ResponseTokenDecode)

ResponseTokenRefresh = _reflection.GeneratedProtocolMessageType('ResponseTokenRefresh', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSETOKENREFRESH,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseTokenRefresh)
  })
_sym_db.RegisterMessage(ResponseTokenRefresh)

ResponseTokenLogin = _reflection.GeneratedProtocolMessageType('ResponseTokenLogin', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSETOKENLOGIN,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseTokenLogin)
  })
_sym_db.RegisterMessage(ResponseTokenLogin)

RequestUserPassword = _reflection.GeneratedProtocolMessageType('RequestUserPassword', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTUSERPASSWORD,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestUserPassword)
  })
_sym_db.RegisterMessage(RequestUserPassword)

RequestDatabaseCreate = _reflection.GeneratedProtocolMessageType('RequestDatabaseCreate', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTDATABASECREATE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestDatabaseCreate)
  })
_sym_db.RegisterMessage(RequestDatabaseCreate)

ResponseDatabaseCreate = _reflection.GeneratedProtocolMessageType('ResponseDatabaseCreate', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEDATABASECREATE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseDatabaseCreate)
  })
_sym_db.RegisterMessage(ResponseDatabaseCreate)

RequestDelete = _reflection.GeneratedProtocolMessageType('RequestDelete', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTDELETE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestDelete)
  })
_sym_db.RegisterMessage(RequestDelete)

RequestView = _reflection.GeneratedProtocolMessageType('RequestView', (_message.Message,), {

  'Query' : _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTVIEW_QUERY,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.RequestView.Query)
    })
  ,
  'DESCRIPTOR' : _REQUESTVIEW,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestView)
  })
_sym_db.RegisterMessage(RequestView)
_sym_db.RegisterMessage(RequestView.Query)

ResponseView = _reflection.GeneratedProtocolMessageType('ResponseView', (_message.Message,), {

  'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESPONSEVIEW_VALUESENTRY,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.ResponseView.ValuesEntry)
    })
  ,
  'DESCRIPTOR' : _RESPONSEVIEW,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseView)
  })
_sym_db.RegisterMessage(ResponseView)
_sym_db.RegisterMessage(ResponseView.ValuesEntry)

RequestFunction = _reflection.GeneratedProtocolMessageType('RequestFunction', (_message.Message,), {

  'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTFUNCTION_VALUESENTRY,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.RequestFunction.ValuesEntry)
    })
  ,
  'DESCRIPTOR' : _REQUESTFUNCTION,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestFunction)
  })
_sym_db.RegisterMessage(RequestFunction)
_sym_db.RegisterMessage(RequestFunction.ValuesEntry)

ResponseFunction = _reflection.GeneratedProtocolMessageType('ResponseFunction', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEFUNCTION,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseFunction)
  })
_sym_db.RegisterMessage(ResponseFunction)

RequestReportList = _reflection.GeneratedProtocolMessageType('RequestReportList', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTREPORTLIST,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestReportList)
  })
_sym_db.RegisterMessage(RequestReportList)

ResponseReportList = _reflection.GeneratedProtocolMessageType('ResponseReportList', (_message.Message,), {

  'Info' : _reflection.GeneratedProtocolMessageType('Info', (_message.Message,), {
    'DESCRIPTOR' : _RESPONSEREPORTLIST_INFO,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.ResponseReportList.Info)
    })
  ,
  'DESCRIPTOR' : _RESPONSEREPORTLIST,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseReportList)
  })
_sym_db.RegisterMessage(ResponseReportList)
_sym_db.RegisterMessage(ResponseReportList.Info)

RequestReportInstall = _reflection.GeneratedProtocolMessageType('RequestReportInstall', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTREPORTINSTALL,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestReportInstall)
  })
_sym_db.RegisterMessage(RequestReportInstall)

ResponseReportInstall = _reflection.GeneratedProtocolMessageType('ResponseReportInstall', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEREPORTINSTALL,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseReportInstall)
  })
_sym_db.RegisterMessage(ResponseReportInstall)

RequestReportDelete = _reflection.GeneratedProtocolMessageType('RequestReportDelete', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTREPORTDELETE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestReportDelete)
  })
_sym_db.RegisterMessage(RequestReportDelete)

RequestReport = _reflection.GeneratedProtocolMessageType('RequestReport', (_message.Message,), {

  'FiltersEntry' : _reflection.GeneratedProtocolMessageType('FiltersEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTREPORT_FILTERSENTRY,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.RequestReport.FiltersEntry)
    })
  ,
  'DESCRIPTOR' : _REQUESTREPORT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestReport)
  })
_sym_db.RegisterMessage(RequestReport)
_sym_db.RegisterMessage(RequestReport.FiltersEntry)

ResponseReport = _reflection.GeneratedProtocolMessageType('ResponseReport', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEREPORT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseReport)
  })
_sym_db.RegisterMessage(ResponseReport)

RequestUpdate = _reflection.GeneratedProtocolMessageType('RequestUpdate', (_message.Message,), {

  'Item' : _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {

    'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
      'DESCRIPTOR' : _REQUESTUPDATE_ITEM_VALUESENTRY,
      '__module__' : 'api_pb2'
      # @@protoc_insertion_point(class_scope:nervatura.RequestUpdate.Item.ValuesEntry)
      })
    ,

    'KeysEntry' : _reflection.GeneratedProtocolMessageType('KeysEntry', (_message.Message,), {
      'DESCRIPTOR' : _REQUESTUPDATE_ITEM_KEYSENTRY,
      '__module__' : 'api_pb2'
      # @@protoc_insertion_point(class_scope:nervatura.RequestUpdate.Item.KeysEntry)
      })
    ,
    'DESCRIPTOR' : _REQUESTUPDATE_ITEM,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.RequestUpdate.Item)
    })
  ,
  'DESCRIPTOR' : _REQUESTUPDATE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestUpdate)
  })
_sym_db.RegisterMessage(RequestUpdate)
_sym_db.RegisterMessage(RequestUpdate.Item)
_sym_db.RegisterMessage(RequestUpdate.Item.ValuesEntry)
_sym_db.RegisterMessage(RequestUpdate.Item.KeysEntry)

ResponseUpdate = _reflection.GeneratedProtocolMessageType('ResponseUpdate', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEUPDATE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseUpdate)
  })
_sym_db.RegisterMessage(ResponseUpdate)

RequestGet = _reflection.GeneratedProtocolMessageType('RequestGet', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTGET,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.RequestGet)
  })
_sym_db.RegisterMessage(RequestGet)

ResponseGet = _reflection.GeneratedProtocolMessageType('ResponseGet', (_message.Message,), {

  'Value' : _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), {
    'DESCRIPTOR' : _RESPONSEGET_VALUE,
    '__module__' : 'api_pb2'
    # @@protoc_insertion_point(class_scope:nervatura.ResponseGet.Value)
    })
  ,
  'DESCRIPTOR' : _RESPONSEGET,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.ResponseGet)
  })
_sym_db.RegisterMessage(ResponseGet)
_sym_db.RegisterMessage(ResponseGet.Value)

MetaData = _reflection.GeneratedProtocolMessageType('MetaData', (_message.Message,), {
  'DESCRIPTOR' : _METADATA,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.MetaData)
  })
_sym_db.RegisterMessage(MetaData)

Address = _reflection.GeneratedProtocolMessageType('Address', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESS,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Address)
  })
_sym_db.RegisterMessage(Address)

Barcode = _reflection.GeneratedProtocolMessageType('Barcode', (_message.Message,), {
  'DESCRIPTOR' : _BARCODE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Barcode)
  })
_sym_db.RegisterMessage(Barcode)

Contact = _reflection.GeneratedProtocolMessageType('Contact', (_message.Message,), {
  'DESCRIPTOR' : _CONTACT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Contact)
  })
_sym_db.RegisterMessage(Contact)

Currency = _reflection.GeneratedProtocolMessageType('Currency', (_message.Message,), {
  'DESCRIPTOR' : _CURRENCY,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Currency)
  })
_sym_db.RegisterMessage(Currency)

Customer = _reflection.GeneratedProtocolMessageType('Customer', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMER,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Customer)
  })
_sym_db.RegisterMessage(Customer)

Deffield = _reflection.GeneratedProtocolMessageType('Deffield', (_message.Message,), {
  'DESCRIPTOR' : _DEFFIELD,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Deffield)
  })
_sym_db.RegisterMessage(Deffield)

Employee = _reflection.GeneratedProtocolMessageType('Employee', (_message.Message,), {
  'DESCRIPTOR' : _EMPLOYEE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Employee)
  })
_sym_db.RegisterMessage(Employee)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Event)
  })
_sym_db.RegisterMessage(Event)

Fieldvalue = _reflection.GeneratedProtocolMessageType('Fieldvalue', (_message.Message,), {
  'DESCRIPTOR' : _FIELDVALUE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Fieldvalue)
  })
_sym_db.RegisterMessage(Fieldvalue)

Groups = _reflection.GeneratedProtocolMessageType('Groups', (_message.Message,), {
  'DESCRIPTOR' : _GROUPS,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Groups)
  })
_sym_db.RegisterMessage(Groups)

Item = _reflection.GeneratedProtocolMessageType('Item', (_message.Message,), {
  'DESCRIPTOR' : _ITEM,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Item)
  })
_sym_db.RegisterMessage(Item)

Link = _reflection.GeneratedProtocolMessageType('Link', (_message.Message,), {
  'DESCRIPTOR' : _LINK,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Link)
  })
_sym_db.RegisterMessage(Link)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
  'DESCRIPTOR' : _LOG,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Log)
  })
_sym_db.RegisterMessage(Log)

Movement = _reflection.GeneratedProtocolMessageType('Movement', (_message.Message,), {
  'DESCRIPTOR' : _MOVEMENT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Movement)
  })
_sym_db.RegisterMessage(Movement)

Numberdef = _reflection.GeneratedProtocolMessageType('Numberdef', (_message.Message,), {
  'DESCRIPTOR' : _NUMBERDEF,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Numberdef)
  })
_sym_db.RegisterMessage(Numberdef)

Pattern = _reflection.GeneratedProtocolMessageType('Pattern', (_message.Message,), {
  'DESCRIPTOR' : _PATTERN,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Pattern)
  })
_sym_db.RegisterMessage(Pattern)

Payment = _reflection.GeneratedProtocolMessageType('Payment', (_message.Message,), {
  'DESCRIPTOR' : _PAYMENT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Payment)
  })
_sym_db.RegisterMessage(Payment)

Place = _reflection.GeneratedProtocolMessageType('Place', (_message.Message,), {
  'DESCRIPTOR' : _PLACE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Place)
  })
_sym_db.RegisterMessage(Place)

Price = _reflection.GeneratedProtocolMessageType('Price', (_message.Message,), {
  'DESCRIPTOR' : _PRICE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Price)
  })
_sym_db.RegisterMessage(Price)

Product = _reflection.GeneratedProtocolMessageType('Product', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Product)
  })
_sym_db.RegisterMessage(Product)

Project = _reflection.GeneratedProtocolMessageType('Project', (_message.Message,), {
  'DESCRIPTOR' : _PROJECT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Project)
  })
_sym_db.RegisterMessage(Project)

Rate = _reflection.GeneratedProtocolMessageType('Rate', (_message.Message,), {
  'DESCRIPTOR' : _RATE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Rate)
  })
_sym_db.RegisterMessage(Rate)

Tax = _reflection.GeneratedProtocolMessageType('Tax', (_message.Message,), {
  'DESCRIPTOR' : _TAX,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Tax)
  })
_sym_db.RegisterMessage(Tax)

Tool = _reflection.GeneratedProtocolMessageType('Tool', (_message.Message,), {
  'DESCRIPTOR' : _TOOL,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Tool)
  })
_sym_db.RegisterMessage(Tool)

Trans = _reflection.GeneratedProtocolMessageType('Trans', (_message.Message,), {
  'DESCRIPTOR' : _TRANS,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.Trans)
  })
_sym_db.RegisterMessage(Trans)

UiAudit = _reflection.GeneratedProtocolMessageType('UiAudit', (_message.Message,), {
  'DESCRIPTOR' : _UIAUDIT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiAudit)
  })
_sym_db.RegisterMessage(UiAudit)

UiMenu = _reflection.GeneratedProtocolMessageType('UiMenu', (_message.Message,), {
  'DESCRIPTOR' : _UIMENU,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiMenu)
  })
_sym_db.RegisterMessage(UiMenu)

UiMenufields = _reflection.GeneratedProtocolMessageType('UiMenufields', (_message.Message,), {
  'DESCRIPTOR' : _UIMENUFIELDS,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiMenufields)
  })
_sym_db.RegisterMessage(UiMenufields)

UiMessage = _reflection.GeneratedProtocolMessageType('UiMessage', (_message.Message,), {
  'DESCRIPTOR' : _UIMESSAGE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiMessage)
  })
_sym_db.RegisterMessage(UiMessage)

UiPrintqueue = _reflection.GeneratedProtocolMessageType('UiPrintqueue', (_message.Message,), {
  'DESCRIPTOR' : _UIPRINTQUEUE,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiPrintqueue)
  })
_sym_db.RegisterMessage(UiPrintqueue)

UiReport = _reflection.GeneratedProtocolMessageType('UiReport', (_message.Message,), {
  'DESCRIPTOR' : _UIREPORT,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiReport)
  })
_sym_db.RegisterMessage(UiReport)

UiUserconfig = _reflection.GeneratedProtocolMessageType('UiUserconfig', (_message.Message,), {
  'DESCRIPTOR' : _UIUSERCONFIG,
  '__module__' : 'api_pb2'
  # @@protoc_insertion_point(class_scope:nervatura.UiUserconfig)
  })
_sym_db.RegisterMessage(UiUserconfig)

_API = DESCRIPTOR.services_by_name['API']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z0github.com/nervatura/nervatura/service/pkg/proto'
  _RESPONSEROWS_ITEM_VALUESENTRY._options = None
  _RESPONSEROWS_ITEM_VALUESENTRY._serialized_options = b'8\001'
  _RESPONSEVIEW_VALUESENTRY._options = None
  _RESPONSEVIEW_VALUESENTRY._serialized_options = b'8\001'
  _REQUESTFUNCTION_VALUESENTRY._options = None
  _REQUESTFUNCTION_VALUESENTRY._serialized_options = b'8\001'
  _REQUESTREPORT_FILTERSENTRY._options = None
  _REQUESTREPORT_FILTERSENTRY._serialized_options = b'8\001'
  _REQUESTUPDATE_ITEM_VALUESENTRY._options = None
  _REQUESTUPDATE_ITEM_VALUESENTRY._serialized_options = b'8\001'
  _REQUESTUPDATE_ITEM_KEYSENTRY._options = None
  _REQUESTUPDATE_ITEM_KEYSENTRY._serialized_options = b'8\001'
  _DATATYPE._serialized_start=10544
  _DATATYPE._serialized_end=10975
  _REPORTORIENTATION._serialized_start=10977
  _REPORTORIENTATION._serialized_end=11025
  _REPORTSIZE._serialized_start=11027
  _REPORTSIZE._serialized_end=11086
  _REPORTOUTPUT._serialized_start=11088
  _REPORTOUTPUT._serialized_end=11143
  _REPORTTYPE._serialized_start=11146
  _REPORTTYPE._serialized_end=11328
  _VALUE._serialized_start=24
  _VALUE._serialized_end=93
  _RESPONSEROWS._serialized_start=96
  _RESPONSEROWS._serialized_end=287
  _RESPONSEROWS_ITEM._serialized_start=158
  _RESPONSEROWS_ITEM._serialized_end=287
  _RESPONSEROWS_ITEM_VALUESENTRY._serialized_start=224
  _RESPONSEROWS_ITEM_VALUESENTRY._serialized_end=287
  _REQUESTEMPTY._serialized_start=289
  _REQUESTEMPTY._serialized_end=303
  _RESPONSEEMPTY._serialized_start=305
  _RESPONSEEMPTY._serialized_end=320
  _REQUESTUSERLOGIN._serialized_start=322
  _REQUESTUSERLOGIN._serialized_end=394
  _RESPONSEUSERLOGIN._serialized_start=396
  _RESPONSEUSERLOGIN._serialized_end=463
  _REQUESTTOKENDECODE._serialized_start=465
  _REQUESTTOKENDECODE._serialized_end=500
  _RESPONSETOKENDECODE._serialized_start=502
  _RESPONSETOKENDECODE._serialized_end=585
  _RESPONSETOKENREFRESH._serialized_start=587
  _RESPONSETOKENREFRESH._serialized_end=624
  _RESPONSETOKENLOGIN._serialized_start=626
  _RESPONSETOKENLOGIN._serialized_end=749
  _REQUESTUSERPASSWORD._serialized_start=751
  _REQUESTUSERPASSWORD._serialized_end=845
  _REQUESTDATABASECREATE._serialized_start=847
  _REQUESTDATABASECREATE._serialized_end=899
  _RESPONSEDATABASECREATE._serialized_start=901
  _RESPONSEDATABASECREATE._serialized_end=967
  _REQUESTDELETE._serialized_start=969
  _REQUESTDELETE._serialized_end=1049
  _REQUESTVIEW._serialized_start=1052
  _REQUESTVIEW._serialized_end=1182
  _REQUESTVIEW_QUERY._serialized_start=1114
  _REQUESTVIEW_QUERY._serialized_end=1182
  _RESPONSEVIEW._serialized_start=1185
  _RESPONSEVIEW._serialized_end=1324
  _RESPONSEVIEW_VALUESENTRY._serialized_start=1254
  _RESPONSEVIEW_VALUESENTRY._serialized_end=1324
  _REQUESTFUNCTION._serialized_start=1327
  _REQUESTFUNCTION._serialized_end=1493
  _REQUESTFUNCTION_VALUESENTRY._serialized_start=224
  _REQUESTFUNCTION_VALUESENTRY._serialized_end=287
  _RESPONSEFUNCTION._serialized_start=1495
  _RESPONSEFUNCTION._serialized_end=1528
  _REQUESTREPORTLIST._serialized_start=1530
  _REQUESTREPORTLIST._serialized_end=1564
  _RESPONSEREPORTLIST._serialized_start=1567
  _RESPONSEREPORTLIST._serialized_end=1773
  _RESPONSEREPORTLIST_INFO._serialized_start=1641
  _RESPONSEREPORTLIST_INFO._serialized_end=1773
  _REQUESTREPORTINSTALL._serialized_start=1775
  _REQUESTREPORTINSTALL._serialized_end=1816
  _RESPONSEREPORTINSTALL._serialized_start=1818
  _RESPONSEREPORTINSTALL._serialized_end=1853
  _REQUESTREPORTDELETE._serialized_start=1855
  _REQUESTREPORTDELETE._serialized_end=1895
  _REQUESTREPORT._serialized_start=1898
  _REQUESTREPORT._serialized_end=2257
  _REQUESTREPORT_FILTERSENTRY._serialized_start=2193
  _REQUESTREPORT_FILTERSENTRY._serialized_end=2257
  _RESPONSEREPORT._serialized_start=2259
  _RESPONSEREPORT._serialized_end=2290
  _REQUESTUPDATE._serialized_start=2293
  _REQUESTUPDATE._serialized_end=2645
  _REQUESTUPDATE_ITEM._serialized_start=2397
  _REQUESTUPDATE_ITEM._serialized_end=2645
  _REQUESTUPDATE_ITEM_VALUESENTRY._serialized_start=224
  _REQUESTUPDATE_ITEM_VALUESENTRY._serialized_end=287
  _REQUESTUPDATE_ITEM_KEYSENTRY._serialized_start=2584
  _REQUESTUPDATE_ITEM_KEYSENTRY._serialized_end=2645
  _RESPONSEUPDATE._serialized_start=2647
  _RESPONSEUPDATE._serialized_end=2679
  _REQUESTGET._serialized_start=2681
  _REQUESTGET._serialized_end=2780
  _RESPONSEGET._serialized_start=2783
  _RESPONSEGET._serialized_end=4112
  _RESPONSEGET_VALUE._serialized_start=2845
  _RESPONSEGET_VALUE._serialized_end=4112
  _METADATA._serialized_start=4114
  _METADATA._serialized_end=4204
  _ADDRESS._serialized_start=4207
  _ADDRESS._serialized_end=4396
  _BARCODE._serialized_start=4398
  _BARCODE._serialized_end=4525
  _CONTACT._serialized_start=4528
  _CONTACT._serialized_end=4748
  _CURRENCY._serialized_start=4751
  _CURRENCY._serialized_end=4895
  _CUSTOMER._serialized_start=4898
  _CUSTOMER._serialized_end=5153
  _DEFFIELD._serialized_start=5156
  _DEFFIELD._serialized_end=5360
  _EMPLOYEE._serialized_start=5363
  _EMPLOYEE._serialized_end=5654
  _EVENT._serialized_start=5657
  _EVENT._serialized_end=5925
  _FIELDVALUE._serialized_start=5927
  _FIELDVALUE._serialized_end=6032
  _GROUPS._serialized_start=6034
  _GROUPS._serialized_end=6132
  _ITEM._serialized_start=6135
  _ITEM._serialized_end=6439
  _LINK._serialized_start=6442
  _LINK._serialized_end=6577
  _LOG._serialized_start=6580
  _LOG._serialized_end=6761
  _MOVEMENT._serialized_start=6764
  _MOVEMENT._serialized_end=7043
  _NUMBERDEF._serialized_start=7046
  _NUMBERDEF._serialized_end=7237
  _PATTERN._serialized_start=7239
  _PATTERN._serialized_end=7335
  _PAYMENT._serialized_start=7337
  _PAYMENT._serialized_end=7464
  _PLACE._serialized_start=7467
  _PLACE._serialized_end=7663
  _PRICE._serialized_start=7666
  _PRICE._serialized_end=7865
  _PRODUCT._serialized_start=7868
  _PRODUCT._serialized_end=8066
  _PROJECT._serialized_start=8069
  _PROJECT._serialized_end=8316
  _RATE._serialized_start=8319
  _RATE._serialized_end=8519
  _TAX._serialized_start=8521
  _TAX._serialized_end=8647
  _TOOL._serialized_start=8650
  _TOOL._serialized_end=8835
  _TRANS._serialized_start=8838
  _TRANS._serialized_end=9466
  _UIAUDIT._serialized_start=9469
  _UIAUDIT._serialized_end=9603
  _UIMENU._serialized_start=9606
  _UIMENU._serialized_end=9744
  _UIMENUFIELDS._serialized_start=9746
  _UIMENUFIELDS._serialized_end=9865
  _UIMESSAGE._serialized_start=9867
  _UIMESSAGE._serialized_end=9953
  _UIPRINTQUEUE._serialized_start=9956
  _UIPRINTQUEUE._serialized_end=10126
  _UIREPORT._serialized_start=10129
  _UIREPORT._serialized_end=10352
  _UIUSERCONFIG._serialized_start=10355
  _UIUSERCONFIG._serialized_end=10541
  _API._serialized_start=11331
  _API._serialized_end=12422
# @@protoc_insertion_point(module_scope)
