(self.webpackChunknervatura_docs=self.webpackChunknervatura_docs||[]).push([[2844],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},21877:function(e,t,a){"use strict";a.r(t),a.d(t,{contentTitle:function(){return h},default:function(){return g},frontMatter:function(){return k},metadata:function(){return N},toc:function(){return f}});var n=a(22122),r=a(19756),i=(a(67294),a(3905)),l=a(44996),o="http://nervatura.com",s="SULBGMAACJWLU",p="infoRow_H10T",u="contactCol_f-4x",m="paypal_30Xr",c="logo_2pRD",d=["components"],k={id:"home",title:"Nervatura",hide_table_of_contents:!1},h=void 0,N={type:"mdx",permalink:"/nervatura/",source:"@site/src/pages/index.md"},f=[{value:"Overview",id:"overview",children:[]},{value:"Installation",id:"installation",children:[{value:"<strong>Docker</strong> image",id:"docker-image",children:[]},{value:"<strong>Snap</strong> package (Linux daemon)",id:"snap-package-linux-daemon",children:[]},{value:"Node.js <strong>NPM</strong>",id:"nodejs-npm",children:[]},{value:"Prebuild binaries",id:"prebuild-binaries",children:[]},{value:"Other platforms",id:"other-platforms",children:[]}]},{value:"Configuration Options",id:"configuration-options",children:[]},{value:"Quick Start",id:"quick-start",children:[{value:"Docker",id:"docker",children:[]},{value:"Snap",id:"snap",children:[]},{value:"Windows",id:"windows",children:[]},{value:"Node.js",id:"nodejs",children:[]},{value:"Admin GUI",id:"admin-gui",children:[]}]},{value:"CLI API",id:"cli-api",children:[]},{value:"Create a new Nervatura database",id:"create-a-new-nervatura-database",children:[]},{value:"Customize the appearance",id:"customize-the-appearance",children:[]},{value:"Bearer Authentication",id:"bearer-authentication",children:[]},{value:"Other Recipes",id:"other-recipes",children:[]}],v={toc:f};function g(e){var t=e.components,a=(0,r.Z)(e,d);return(0,i.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Nervatura is a business management framework based on ",(0,i.kt)("strong",{parentName:"p"},"open-data principle"),". It can handle any type of business related information, starting from customer details, up to shipping, stock or payment information. Developed as open-source project and can be used freely under the scope of ",(0,i.kt)("a",{parentName:"p",href:"http://www.gnu.org/licenses/lgpl.html"},"LGPLv3 License"),"."),(0,i.kt)("div",{className:"row "+p},(0,i.kt)("div",{className:"col"},"The main aspects of its design were:",(0,i.kt)("ul",null,(0,i.kt)("li",null,"simple and transparent structure"),(0,i.kt)("li",null,"capability of storing different data types of an average company"),(0,i.kt)("li",null,"effective, easily expandable and secure data storage"),(0,i.kt)("li",null,"support of several database types"),(0,i.kt)("li",null,"well documented, easy data management"))),(0,i.kt)("div",{className:"col "+u},(0,i.kt)("div",{className:""+m},(0,i.kt)("a",{href:o,target:"_blank",rel:"noopener noreferrer",title:"Nervatura Homepage"},(0,i.kt)("img",{src:(0,l.Z)("img/ntura_white.jpg"),alt:"logo",className:""+c}))),(0,i.kt)("div",{className:""+m},(0,i.kt)("form",{action:"https://www.paypal.com/donate",method:"post",target:"_top"},(0,i.kt)("input",{type:"hidden",name:"hosted_button_id",value:s}),(0,i.kt)("input",{type:"image",src:"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif",border:"0",name:"submit",title:"PayPal - The safer, easier way to pay online!",alt:"Donate with PayPal button"}),(0,i.kt)("img",{alt:"",border:"0",src:"https://www.paypal.com/en_FI/i/scr/pixel.gif",width:"1",height:"1"}))))),(0,i.kt)("p",null,"The framework is based on Nervatura Object ",(0,i.kt)("a",{parentName:"p",href:"model"},(0,i.kt)("strong",{parentName:"a"},"MODEL"))," specification. It is a general ",(0,i.kt)("strong",{parentName:"p"},"open-data model"),", which can store all information generated in the operation of a usual corporation."),(0,i.kt)("p",null,"The Nervatura service is small and fast. A single ~5 MB file/image contains all the necessary dependencies.\nThe framework includes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#cli-api"},(0,i.kt)("strong",{parentName:"a"},"CLI API"))," (command line interface)"),(0,i.kt)("li",{parentName:"ul"},"standard HTTP ",(0,i.kt)("a",{parentName:"li",href:"api"},(0,i.kt)("strong",{parentName:"a"},"RESTful API"))," for client communication"),(0,i.kt)("li",{parentName:"ul"},"HTTP/2-based ",(0,i.kt)("a",{parentName:"li",href:"grpc"},(0,i.kt)("strong",{parentName:"a"},"gRPC API"))," for server-side communication"),(0,i.kt)("li",{parentName:"ul"},"JWT generation, external token validation, SSL/TLS support and other HTTP security ",(0,i.kt)("a",{parentName:"li",href:"#configuration-options"},"settings")),(0,i.kt)("li",{parentName:"ul"},"built-in database drivers for postgres, mysql, sqlite databases"),(0,i.kt)("li",{parentName:"ul"},"a basic report generation library for creating simple PDF documents (eg. order, invoice, etc.)\nor CSV data files"),(0,i.kt)("li",{parentName:"ul"},"sample report templates and ",(0,i.kt)("a",{parentName:"li",href:"docs/editor"},(0,i.kt)("strong",{parentName:"a"},"REPORT EDITOR"))," GUI"),(0,i.kt)("li",{parentName:"ul"},"PWA ",(0,i.kt)("a",{parentName:"li",href:"docs/"},(0,i.kt)("strong",{parentName:"a"},"CLIENT"))," application and a basic ",(0,i.kt)("a",{parentName:"li",href:"#admin-api-gui"},(0,i.kt)("strong",{parentName:"a"},"ADMIN"))," interface")),(0,i.kt)("p",null,"The client and report interface supports ",(0,i.kt)("a",{parentName:"p",href:"#customize-the-appearance"},"multilingualism"),". The framework can be easily extended with additional interfaces and functions in the ",(0,i.kt)("a",{parentName:"p",href:"https://grpc.io/docs/languages/"},"supported languages"),":\nC#, C++, Dart, Go, Java, Kotlin, Node, Objective-C, PHP, Python, Ruby"),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("h3",{id:"docker-image"},(0,i.kt)("strong",{parentName:"h3"},"Docker")," image"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ docker pull nervatura/nervatura:latest\n")),(0,i.kt)("h3",{id:"snap-package-linux-daemon"},(0,i.kt)("strong",{parentName:"h3"},"Snap")," package (Linux daemon)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo snap install --beta nervatura\n")),(0,i.kt)("p",null,"Checking service status and last logs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ systemctl status -l snap.nervatura.nervatura.service\n")),(0,i.kt)("p",null,"Default snap data and http.log path:  ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/snap/nervatura/common")),(0,i.kt)("h3",{id:"nodejs-npm"},"Node.js ",(0,i.kt)("strong",{parentName:"h3"},"NPM")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ npm install --save nervatura\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ npm update nervatura\n")),(0,i.kt)("h3",{id:"prebuild-binaries"},"Prebuild binaries"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/nervatura/nervatura-service/releases/latest"},"Linux and Windows x64")),(0,i.kt)("h3",{id:"other-platforms"},"Other platforms"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ git clone https://github.com/nervatura/nervatura-service.git\n$ cd nervatura-service\n$ CGO_ENABLED=0 GOOS=$(OS_NAME) GOARCH=$(ARCH_NAME) \\\n  go build -tags "$(TAGS)" -ldflags="-w -s -X main.Version=$(VERSION)" \\\n  -o $(APP_NAME) main.go\n')),(0,i.kt)("p",null,"See more: ",(0,i.kt)("a",{parentName:"p",href:"https://golangdocs.com/building-applications-in-golang"},"Building Applications in GoLang")),(0,i.kt)("h2",{id:"configuration-options"},"Configuration Options"),(0,i.kt)("p",null,"The application uses environment variables to set configuration options. It will be read from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nervatura/nervatura-service/blob/master/.env.example"},".env.example")," file. Set the environment variables as needed!"),(0,i.kt)("h2",{id:"quick-start"},"Quick Start"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new demo database")),(0,i.kt)("h3",{id:"docker"},"Docker"),(0,i.kt)("p",null,"Create a Docker container and set some options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ mkdir data\n$ docker run -i -t --rm --name nervatura \\\n  -e NT_API_KEY=DEMO_API_KEY \\\n  -p 5000:5000 -v "$(pwd)"/data:/data nervatura/nervatura:latest\n')),(0,i.kt)("p",null,"In a new command window:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ docker exec -i nervatura /nervatura \\\n  -c DatabaseCreate -k DEMO_API_KEY \\\n  -o "{\\"database\\":\\"demo\\",\\"demo\\":true}"\n')),(0,i.kt)("h3",{id:"snap"},"Snap"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ sudo NT_API_KEY=DEMO_API_KEY \\\n  NT_ALIAS_DEMO="sqlite://file:/var/snap/nervatura/common/demo.db?cache=shared&mode=rwc" \\\n  /snap/nervatura/current/nervatura -c DatabaseCreate \\\n  -k DEMO_API_KEY -o "{\\"database\\":\\"demo\\",\\"demo\\":true}"\n')),(0,i.kt)("h3",{id:"windows"},"Windows"),(0,i.kt)("p",null,"Open a PowerShell and set the (temporary) variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$env:NT_API_KEY="DEMO_API_KEY"\n$env:NT_ALIAS_DEMO="sqlite://file:///C:/YOUR_DATA_PATH/demo.db"\n')),(0,i.kt)("p",null,'The "C:/YOUR_DATA_PATH" is an existing and writable directory, e.g. ',(0,i.kt)("inlineCode",{parentName:"p"},'$env:NT_ALIAS_DEMO="sqlite://file:///C:/mydata/demo.db"')," The SQLite database are created automatically."),(0,i.kt)("p",null,"Launch nervatura CLI (in the same command window!), and create a database:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'nervatura -c DatabaseCreate -k DEMO_API_KEY -o \'{\\"database\\":\\"demo\\",\\"demo\\":true}\'\n')),(0,i.kt)("p",null,"Launch nervatura server (in the same command window!):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"nervatura\n")),(0,i.kt)("p",null,"Of course, the environment variables can also be set permanently (see more SystemPropertiesAdvanced.exe). In this case, the server can be started from anywhere, not just in the session."),(0,i.kt)("h3",{id:"nodejs"},"Node.js"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nervatura/nervatura-express"},"Node.js sample application")),(0,i.kt)("h3",{id:"admin-gui"},"Admin GUI"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:5000/admin/"},(0,i.kt)("strong",{parentName:"a"},"ADMIN GUI"))," Database section:"),(0,i.kt)("p",null,"API-KEY: ",(0,i.kt)("strong",{parentName:"p"},"DEMO_API_KEY"),(0,i.kt)("br",null),"\nAlias name: ",(0,i.kt)("strong",{parentName:"p"},"demo"),(0,i.kt)("br",null),"\nDemo database: ",(0,i.kt)("strong",{parentName:"p"},"true")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Login to the database: ",(0,i.kt)("a",{parentName:"li",href:"http://localhost:5000/client/"},(0,i.kt)("strong",{parentName:"a"},"Nervatura Client")))),(0,i.kt)("p",null,"Username: ",(0,i.kt)("strong",{parentName:"p"},"admin"),(0,i.kt)("br",null),"\nPassword: ",(0,i.kt)("strong",{parentName:"p"},"Empty password: Please change after the first login!"),(0,i.kt)("br",null),"\nDatabase: ",(0,i.kt)("strong",{parentName:"p"},"demo")),(0,i.kt)("h2",{id:"cli-api"},"CLI API"),(0,i.kt)("p",null,"Full command line API. Program usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ docker exec -i nervatura /nervatura -h\n")),(0,i.kt)("p",null,"Without Docker:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ./nervatura -h\n")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ docker exec -i nervatura /nervatura \\\n  -c UserLogin -o "{\\"username\\":\\"admin\\",\\"database\\":\\"demo\\"}"\n')),(0,i.kt)("p",null,"For more examples, see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nervatura/nervatura-express"},"Node.js sample application")),(0,i.kt)("h2",{id:"create-a-new-nervatura-database"},"Create a new Nervatura database"),(0,i.kt)("p",null,"Configure your API-KEY and database connection in your environment variables:\n",(0,i.kt)("inlineCode",{parentName:"p"},"NT_API_KEY")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"NT_ALIAS_[ALIASNAME]")," ",(0,i.kt)("br",null),"\nConnection string form: ",(0,i.kt)("em",{parentName:"p"},"adapter://user:password@host/database"),(0,i.kt)("br",null),"\nSupported database adapters: ",(0,i.kt)("em",{parentName:"p"},"sqlite3, postgres, mysql")),(0,i.kt)("p",null,"For examples:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"NT_ALIAS_DEMO=sqlite3://data/database/demo.db")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"NT_ALIAS_PGDEMO=postgres://postgres:admin@localhost:5432/nervatura")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"NT_ALIAS_MYDEMO=mysql://root:admin@localhost:3306/nervatura"))),(0,i.kt)("p",null,"Create a new database:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'$ ./nervatura -c DatabaseCreate -k [YOUR_API_KEY] \\\n  -o "{\\"database\\":\\"[your_lowercase_alias_name]\\",\\"demo\\":false}"\n')),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:5000/admin/"},(0,i.kt)("strong",{parentName:"a"},"ADMIN GUI"))," Database section:"),(0,i.kt)("p",null,"API-KEY: ",(0,i.kt)("strong",{parentName:"p"},"YOUR_API_KEY"),(0,i.kt)("br",null),"\nAlias name: ",(0,i.kt)("strong",{parentName:"p"},"your_lowercase_alias_name"),(0,i.kt)("br",null),"\nDemo database: ",(0,i.kt)("strong",{parentName:"p"},"false")),(0,i.kt)("p",null,"The SQLite databases are created automatically. Other types of databases must be created manually before. For testing you can fill in the database with some dummy data (demo=true). If you don't need those later, then you can create a blank database again. ",(0,i.kt)("strong",{parentName:"p"},"All data in the database will be destroyed!")),(0,i.kt)("p",null,"Optional: Install Nervatura Report templates to the database"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Login to the database: ",(0,i.kt)("a",{parentName:"li",href:"http://localhost:5000/admin/"},(0,i.kt)("strong",{parentName:"a"},"ADMIN GUI"))," ",(0,i.kt)("br",null),"\nUsername: ",(0,i.kt)("strong",{parentName:"li"},"admin"),(0,i.kt)("br",null),"\nPassword: ",(0,i.kt)("strong",{parentName:"li"},"Empty password: Please change after the first login!"),(0,i.kt)("br",null),"\nDatabase: ",(0,i.kt)("strong",{parentName:"li"},"your_lowercase_alias_name")),(0,i.kt)("li",{parentName:"ul"},"List reports: Returns all installable files from the ",(0,i.kt)("inlineCode",{parentName:"li"},"NT_REPORT_DIR")," directory (empty value: all built-in Nervatura Report templates)"),(0,i.kt)("li",{parentName:"ul"},"Install a report to the database")),(0,i.kt)("h2",{id:"customize-the-appearance"},"Customize the appearance"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Nervatura Client language translation")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a file based on the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/nervatura/nervatura/tree/master/dist"},"client_config.json")," file. All subtitles ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/nervatura/nervatura-client/blob/dev/src/config/locales.js"},"can be found here"),"."),(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"NT_CLIENT_CONFIG")," environment variable value to ",(0,i.kt)("em",{parentName:"li"},"YOUR_CLIENT_CONFIG_FILE_PATH")),(0,i.kt)("li",{parentName:"ul"},"Docker container: mount local folder to the container")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Nervatura Client custom remote functions: ",(0,i.kt)("a",{parentName:"p",href:"docs/uimenu"},(0,i.kt)("strong",{parentName:"a"},"MENU SHORTCUTS")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Custom PDF Report font"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"NT_FONT_FAMILY")," environment variable value to ",(0,i.kt)("em",{parentName:"li"},"YOUR_FONT_FAMILY_NAME")),(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"NT_FONT_DIR")," environment variable value to ",(0,i.kt)("em",{parentName:"li"},"YOUR_FONTS_PATH")),(0,i.kt)("li",{parentName:"ul"},"Valid font type and filename form: FAMILY_NAME-Regular.ttf, FAMILY_NAME-Italic.ttf, FAMILY_NAME-Bold.ttf, FAMILY_NAME-BoldItalic.ttf"),(0,i.kt)("li",{parentName:"ul"},"Docker container: mount local folder to the container")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Modify installed Nervatura report definitions: ",(0,i.kt)("a",{parentName:"li",href:"docs/editor"},(0,i.kt)("strong",{parentName:"a"},"REPORT EDITOR")))),(0,i.kt)("h2",{id:"bearer-authentication"},"Bearer Authentication"),(0,i.kt)("p",null,"Environment variables: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nervatura/nervatura-service/blob/master/.env.example"},".env.example"),(0,i.kt)("br",null),"\nUser authentication is based on the ",(0,i.kt)("em",{parentName:"p"},"employee.username")," or ",(0,i.kt)("em",{parentName:"p"},"customer.custnumber")," fields. The identifier can be the following types: username (employee), email, phone number (customer).",(0,i.kt)("br",null),"\nPasswords are not stored in the employee or customer tables. They are anonymized and stored in a unique table with ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/P-H-C/phc-winner-argon2"},"strong encryption"),"."),(0,i.kt)("p",null,"External authorization: ",(0,i.kt)("inlineCode",{parentName:"p"},"NT_TOKEN_PUBLIC_KEY_TYPE"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"NT_TOKEN_PUBLIC_KEY_URL")),(0,i.kt)("h2",{id:"other-recipes"},"Other Recipes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://godoc.org/github.com/nervatura/nervatura-service"},(0,i.kt)("img",{parentName:"a",src:"https://godoc.org/github.com/nervatura/nervatura-service?status.svg",alt:"GoDoc"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nervatura/nervatura/tree/master/dist"},"gRPC API proto file")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nervatura/nervatura-service/tree/master/pkg/utils/static/templates"},"Report templates files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nervatura/nervatura-express"},"Node.js sample application"))))}g.isMDXComponent=!0},13919:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,{b:function(){return n},Z:function(){return r}})},44996:function(e,t,a){"use strict";a.d(t,{C:function(){return i},Z:function(){return l}});var n=a(52263),r=a(13919);function i(){var e=(0,n.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var i=void 0===n?{}:n,l=i.forcePrependBaseUrl,o=void 0!==l&&l,s=i.absolute,p=void 0!==s&&s;if(!a)return a;if(a.startsWith("#"))return a;if((0,r.b)(a))return a;if(o)return t+a;var u=a.startsWith(t)?a:t+a.replace(/^\//,"");return p?e+u:u}(i,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}}}]);